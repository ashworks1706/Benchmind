version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: ai-agent-benchmark-db
    environment:
      POSTGRES_DB: ai_agent_benchmark
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-agent-benchmark-backend
    environment:
      # Flask Configuration
      FLASK_ENV: development
      PORT: 5000
      
      # Database Configuration
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/ai_agent_benchmark
      
      # GitHub OAuth Configuration (you need to set these)
      GITHUB_OAUTH_CLIENT_ID: ${GITHUB_OAUTH_CLIENT_ID}
      GITHUB_OAUTH_CLIENT_SECRET: ${GITHUB_OAUTH_CLIENT_SECRET}
      GITHUB_OAUTH_CALLBACK: ${GITHUB_OAUTH_CALLBACK:-http://localhost:5000/auth/github/callback}
      
      # Security Secrets (auto-generated if not provided)
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_here_change_in_production}
      ENCRYPTION_SECRET: ${ENCRYPTION_SECRET:-your_encryption_secret_here_change_in_production}
      
      # API Keys
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      GITHUB_TOKEN: ${GITHUB_TOKEN}
    volumes:
      - ./backend:/app
      - backend_cache:/app/cache
      - chromadb_data:/app/data/chromadb
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    command: >
      sh -c "python init_db.py --force &&
             python app.py"

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-agent-benchmark-frontend
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:5000}
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  postgres_data:
    driver: local
  backend_cache:
    driver: local
  chromadb_data:
    driver: local

networks:
  app-network:
    driver: bridge
